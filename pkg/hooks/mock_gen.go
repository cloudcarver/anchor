// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/hooks/hooks.go
//
// Generated by this command:
//
//	mockgen -source pkg/hooks/hooks.go -destination pkg/hooks/mock_gen.go -package hooks
//

// Package hooks is a generated GoMock package.
package hooks

import (
	context "context"
	reflect "reflect"

	pgx "github.com/jackc/pgx/v5"
	gomock "go.uber.org/mock/gomock"
)

// MockAnchorHookInterface is a mock of AnchorHookInterface interface.
type MockAnchorHookInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAnchorHookInterfaceMockRecorder
	isgomock struct{}
}

// MockAnchorHookInterfaceMockRecorder is the mock recorder for MockAnchorHookInterface.
type MockAnchorHookInterfaceMockRecorder struct {
	mock *MockAnchorHookInterface
}

// NewMockAnchorHookInterface creates a new mock instance.
func NewMockAnchorHookInterface(ctrl *gomock.Controller) *MockAnchorHookInterface {
	mock := &MockAnchorHookInterface{ctrl: ctrl}
	mock.recorder = &MockAnchorHookInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnchorHookInterface) EXPECT() *MockAnchorHookInterfaceMockRecorder {
	return m.recorder
}

// OnOrgCreatedWithTx mocks base method.
func (m *MockAnchorHookInterface) OnOrgCreatedWithTx(ctx context.Context, tx pgx.Tx, orgID int32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OnOrgCreatedWithTx", ctx, tx, orgID)
	ret0, _ := ret[0].(error)
	return ret0
}

// OnOrgCreatedWithTx indicates an expected call of OnOrgCreatedWithTx.
func (mr *MockAnchorHookInterfaceMockRecorder) OnOrgCreatedWithTx(ctx, tx, orgID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnOrgCreatedWithTx", reflect.TypeOf((*MockAnchorHookInterface)(nil).OnOrgCreatedWithTx), ctx, tx, orgID)
}

// RegisterOnOrgCreatedWithTx mocks base method.
func (m *MockAnchorHookInterface) RegisterOnOrgCreatedWithTx(hook OnOrgCreatedWithTx) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RegisterOnOrgCreatedWithTx", hook)
}

// RegisterOnOrgCreatedWithTx indicates an expected call of RegisterOnOrgCreatedWithTx.
func (mr *MockAnchorHookInterfaceMockRecorder) RegisterOnOrgCreatedWithTx(hook any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterOnOrgCreatedWithTx", reflect.TypeOf((*MockAnchorHookInterface)(nil).RegisterOnOrgCreatedWithTx), hook)
}
